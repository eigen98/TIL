//
//  main.swift
//  BJ11057
//
//  Created by JeongMin Ko on 2022/12/27.
//

/*
 문제
 
 오르막 수는 수의 자리가 오름차순을 이루는 수를 말한다. 이때, 인접한 수가 같아도 오름차순으로 친다.

 예를 들어, 2234와 3678, 11119는 오르막 수이지만, 2232, 3676, 91111은 오르막 수가 아니다.

 수의 길이 N이 주어졌을 때, 오르막 수의 개수를 구하는 프로그램을 작성하시오.
 
 수는 0으로 시작할 수 있다.

 입력
 첫째 줄에 N (1 ≤ N ≤ 1,000)이 주어진다.

 출력
 첫째 줄에 길이가 N인 오르막 수의 개수를 10,007로 나눈 나머지를 출력한다.

 예제 입력 1
 1
 예제 출력 1
 10
 예제 입력 2
 2
 예제 출력 2
 55
 */
import Foundation

func solution(){
    var N = Int(readLine()!)!
    var dp = [Int]() // dp[i] -> i자리수 숫자 오름차 수 개수
    /*
     (i = 1)
     -> 0, 1, 2, 3, 4, 5, 6 ... 9 // 10개
     (i = 2)
     -> 01, 02, ...09 / 11, 12, 13, 14... 19, / 22, 23...29, / 33, 34...39/ ...88,89/ 99
     (i = 3)
     -> 000,001, 002, 003,...111, 112, 113,...119 / 888, 889,899 / 999
     (i = 1000)
     ...
    */
    //arr[자릿수][맨 앞자리]
    //arr[3][0] -> 000, 001, ...099 -> 100개
    //arr[3][1] -> 111, 112,...199 -> ar[2][1] +... ar[2][9]
    
    var arr = [[Int]](repeating: [Int](repeating: 0, count: 10), count: N + 1) //0자리 깍두기, 1...N
    
    //i = 1
    
    for i in 0...9{
        arr[1][i] = 1
    }
    dp.append(0)
    dp.append(10)
    var prevTotal = 10
    for i in 1...N{
        for j in 0...9{
            for k in j...9{
                arr[i][j] += (arr[i - 1][k] % 10007)
                arr[i][j] = arr[i][j] % 10007
            }
        }
    }
    
    var ans = 0
    for num in arr[N]{
        ans += num
    }
    print(ans % 10007)
    return
    
    
    
    
}
solution()
